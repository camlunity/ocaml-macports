diff -wruN bin_prot-1.3.1.orig/lib/read_ml.ml bin_prot-1.3.1/lib/read_ml.ml
--- bin_prot-1.3.1.orig/lib/read_ml.ml	2011-07-05 03:59:19.000000000 +0300
+++ bin_prot-1.3.1/lib/read_ml.ml	2011-07-05 03:59:27.000000000 +0300
@@ -398,7 +398,7 @@
   List.rev rev_lst
 
 #ifndef ARCH_SIXTYFOUR
-let dummy_float_buf = Array1.create char c_layout 8
+let dummy_float_buf = create_buf 8
 let () = ignore (Write_ml.bin_write_float dummy_float_buf ~pos:0 3.1)
 let max_array_length_2 = Sys.max_array_length / 2
 #endif
diff -wruN bin_prot-1.3.1.orig/lib/read_stubs.c bin_prot-1.3.1/lib/read_stubs.c
--- bin_prot-1.3.1.orig/lib/read_stubs.c	2011-07-05 03:59:19.000000000 +0300
+++ bin_prot-1.3.1/lib/read_stubs.c	2011-07-05 04:02:26.000000000 +0300
@@ -517,7 +517,7 @@
 
 /* Reading bigarrays */
 
-#define MK_BA1_READER(NAME, TYPE, TFLAG) \
+#define MK_BA1_READER(NAME, TYPE, TFLAG, TLAYOUT)                               \
   CAMLprim inline value read_##NAME##_stub(char **sptr_ptr, char *eptr) \
   { \
     unsigned long len = read_nat0(sptr_ptr, eptr); \
@@ -531,7 +531,7 @@
     dim = len; \
     v_res = \
       caml_ba_alloc( \
-        CAML_BA_##TFLAG | CAML_BA_FORTRAN_LAYOUT, 1, NULL, &dim); \
+        CAML_BA_##TFLAG | CAML_BA_##TLAYOUT##_LAYOUT, 1, NULL, &dim); \
     *sptr_ptr = next; \
     if (unlikely(tot_size > 65536)) { \
       Begin_roots1(v_res); \
@@ -545,10 +545,10 @@
   \
   MK_ML_READER(NAME)
 
-MK_BA1_READER(bigstring, char, UINT8)
+MK_BA1_READER(bigstring, char, UINT8, C)
 
 #define MK_VEC_MAT_READERS(NAME, TYPE, TFLAG) \
-  MK_BA1_READER(NAME##_vec, TYPE, TFLAG) \
+  MK_BA1_READER(NAME##_vec, TYPE, TFLAG, FORTRAN)     \
   \
   CAMLprim inline value read_##NAME##_mat_stub(char **sptr_ptr, char *eptr) \
   { \
diff -wruN bin_prot-1.3.1.orig/lib/unsafe_read_c.ml bin_prot-1.3.1/lib/unsafe_read_c.ml
--- bin_prot-1.3.1.orig/lib/unsafe_read_c.ml	2011-07-05 03:59:19.000000000 +0300
+++ bin_prot-1.3.1/lib/unsafe_read_c.ml	2011-07-05 03:59:27.000000000 +0300
@@ -98,7 +98,7 @@
   List.rev rev_lst
 
 #ifndef ARCH_SIXTYFOUR
-let dummy_float_buf = Array1.create char c_layout 8
+let dummy_float_buf = create_buf 8
 let () = ignore (Write_ml.bin_write_float dummy_float_buf ~pos:0 3.1)
 let dummy_float_buf_eptr = get_eptr dummy_float_buf ~pos:0
 let max_array_length_2 = Sys.max_array_length / 2
